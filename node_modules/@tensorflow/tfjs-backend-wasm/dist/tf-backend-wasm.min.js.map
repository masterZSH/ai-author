{"version":3,"file":"tf-backend-wasm.min.js","sources":["../src/kernels/types.ts","../src/kernels/_FusedMatMul.ts","../src/kernels/unary_kernel.ts","../src/kernels/binary_kernel.ts","../src/kernels/Abs.ts","../src/kernels/AddN.ts","../src/kernels/ArgMax.ts","../src/kernels/AvgPool.ts","../src/kernels/BatchMatMul.ts","../src/kernels/ClipByValue.ts","../src/kernels/Conv2D.ts","../src/kernels/Cast.ts","../src/kernels/CropAndResize.ts","../src/kernels/DepthwiseConv2dNative.ts","../src/kernels/Add.ts","../src/kernels/Concat.ts","../src/kernels/Cos.ts","../src/kernels/Div.ts","../src/kernels/Exp.ts","../src/kernels/FusedBatchNorm.ts","../src/kernels/FusedConv2D.ts","../src/kernels/FusedDepthwiseConv2D.ts","../src/kernels/Gather.ts","../src/kernels/GatherNd.ts","../src/kernels/FloorDiv.ts","../src/kernels/Greater.ts","../src/kernels/GreaterEqual.ts","../src/kernels/Less.ts","../src/kernels/LessEqual.ts","../src/kernels/Log.ts","../src/kernels/Max.ts","../src/kernels/LogicalAnd.ts","../src/kernels/MaxPool.ts","../src/kernels/Min.ts","../src/kernels/Maximum.ts","../src/kernels/Minimum.ts","../src/kernels/NonMaxSuppression_util.ts","../src/kernels/NonMaxSuppressionV3.ts","../src/kernels/NonMaxSuppressionV5.ts","../src/kernels/Mul.ts","../src/kernels/Neg.ts","../src/kernels/PadV2.ts","../src/kernels/NotEqual.ts","../src/kernels/OnesLike.ts","../src/kernels/Prelu.ts","../src/kernels/ResizeBilinear.ts","../src/kernels/ScatterNd.ts","../src/kernels/Sigmoid.ts","../src/kernels/Softmax.ts","../src/kernels/Slice.ts","../src/kernels/Pow.ts","../src/kernels/Relu.ts","../src/kernels/Relu6.ts","../src/kernels/Reshape.ts","../src/kernels/Rsqrt.ts","../src/kernels/Sin.ts","../src/kernels/Split.ts","../src/kernels/Sqrt.ts","../src/kernels/Square.ts","../src/kernels/Sum.ts","../src/kernels/Tile.ts","../src/kernels/Transpose.ts","../src/kernels/Sub.ts","../src/kernels/Tanh.ts","../src/kernels/Unpack.ts","../src/kernels/ZerosLike.ts","../wasm-out/tfjs-backend-wasm.js","../src/backend_wasm.ts","../src/version.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n\n// Must match enum in cc/fusable_activations.h.\nexport enum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\ninterface FusedMatMulInputs extends NamedTensorInfoMap {\n  a: TensorInfo;\n  b: TensorInfo;\n  bias?: TensorInfo;\n  preluActivationWeights?: TensorInfo;\n}\n\ninterface FusedMatMulAttrs extends NamedAttrMap {\n  transposeA: boolean;\n  transposeB: boolean;\n  activation: FusableActivation;\n}\n\nlet wasmFusedMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, activation: number, biasId: number,\n    preluActivationWeightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedMatMul = backend.wasm.cwrap('_FusedMatMul', null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number',  // activation\n    'number',  // biasId\n    'number',  // preluActivationWeightsId\n    'number'   // out_id\n  ]);\n}\n\nfunction fusedBatchMatMul(args: {\n  inputs: FusedMatMulInputs,\n  backend: BackendWasm,\n  attrs: FusedMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `_FusedMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB, activation} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `_FusedMatMul only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    biasId = biasData.id;\n  }\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDim = a.shape[0];\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmFusedMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId,\n      outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: '_FusedMatMul',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchMatMul\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface UnaryInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\nexport function registerUnaryKernel(kernelName: string) {\n  let wasmFunc: (xId: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc =\n        backend.wasm.cwrap(kernelName, null /* void */, ['number', 'number']);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, outId);\n    return out;\n  }\n\n  registerKernel({kernelName, backendName: 'wasm', setupFunc, kernelFunc});\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DataType, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nexport function registerBinaryKernel(\n    kernelName: string, supportsFullBroadcast: boolean, dtype?: DataType) {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    if (supportsFullBroadcast) {\n      kernelFunc();\n      return out;\n    }\n\n    const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\n    const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\n    const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\n    const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\n    if (loopsOverAllOfA && loopsOverAllOfB) {\n      kernelFunc();\n      return out;\n    } else {\n      throw new Error(\n          `Broadcasting along outer dims is not yet ` +\n          `supported for ${kernelName}.`);\n    }\n  }\n\n  registerKernel({kernelName, backendName: 'wasm', setupFunc, kernelFunc});\n}\n\ninterface BinaryInputs extends NamedTensorInfoMap {\n  a: TensorInfo;\n  b: TensorInfo;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Abs');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelFunc, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap('AddN', null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'AddN',\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as {} as KernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelFunc, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\ninterface ArgMaxInputs {\n  x: TensorInfo;\n}\n\ninterface ArgMaxAttrs {\n  axis: number;\n}\n\nlet wasmFunc: (\n    xId: number, dtype: number, outerSize: number, innerSize: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFunc = backend.wasm.cwrap('ArgMax', null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // outer_size\n    'number',  // inner_size\n    'number'   // out_id\n  ]);\n}\n\nfunction argmax(\n    args: {inputs: ArgMaxInputs, backend: BackendWasm, attrs: ArgMaxAttrs}) {\n  const {inputs: {x}, backend, attrs: {axis}} = args;\n  const outShape = x.shape.slice(0, -1);\n  const out = backend.makeOutput(outShape, 'int32');\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const outerSize = util.sizeFromShape(out.shape);\n  const innerSize = x.shape[axis];\n  wasmFunc(xId, CppDType[x.dtype], outerSize, innerSize, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ArgMax',\n  backendName: 'wasm',\n  kernelFunc: argmax as {} as KernelFunc,\n  setupFunc: setup\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface AvgPoolInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap('AvgPool', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(args: {\n  inputs: AvgPoolInputs,\n  backend: BackendWasm,\n  attrs: backend_util.Conv2DInfo\n}) {\n  const {inputs, attrs, backend} = args;\n  const convInfo = attrs;\n\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'AvgPool',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface BatchMatMulInputs extends NamedTensorInfoMap {\n  a: TensorInfo;\n  b: TensorInfo;\n}\n\ninterface BatchMatMulAttrs extends NamedAttrMap {\n  transposeA: boolean;\n  transposeB: boolean;\n}\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap('BatchMatMul', null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDim = a.shape[0];\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmBatchMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'BatchMatMul',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul\n});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface ClipByValueInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface ClipByValueAttrs extends NamedAttrMap {\n  min: number;\n  max: number;\n}\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap('ClipByValue', null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {min, max} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, min, max, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ClipByValue',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DAttrs, KernelFunc, NamedTensorInfoMap, registerKernel, Tensor4D, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface Conv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap('Conv2D', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(\n    args: {inputs: Conv2DInputs, backend: BackendWasm, attrs: Conv2DAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode, dataFormat} = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, false, $dataFormat);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Conv2D',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface CastInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface CastAttrs extends NamedAttrMap {\n  dtype: DataType;\n}\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Cast',\n  backendName: 'wasm',\n  kernelFunc: cast,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {cast} from './Cast';\n\ninterface CropAndResizeInputs extends NamedTensorInfoMap {\n  images: TensorInfo;\n  boxes: TensorInfo;\n  boxInd: TensorInfo;\n}\n\ninterface CropAndResizeAttrs extends NamedAttrMap {\n  method: keyof InterpolationMethod;\n  extrapolationValue: number;\n  cropSize: [number, number];\n}\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap('CropAndResize', null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {images, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, images.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (images.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(images.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as {} as keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'CropAndResize',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNativeAttrs, KernelFunc, NamedTensorInfoMap, registerKernel, Tensor4D, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface DepthwiseConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap('DepthwiseConv2dNative', null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: DepthwiseConv2dNativeAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode} = attrs;\n\n  const $dilations = dilations == null ? [1, 1] : dilations;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides,\n      ($dilations as number | [number, number]), pad, dimRoundingMode,\n      true /* depthwise */);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'DepthwiseConv2dNative',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Add', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedAttrMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface ConcatAttrs extends NamedAttrMap {\n  axis: number;\n}\n\nfunction concat(\n    args: {inputs: TensorInfo[], backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend, attrs: {axis}} = args;\n  const outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  const batchDim = util.sizeFromShape(inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Concat',\n  backendName: 'wasm',\n  kernelFunc: concat as {} as KernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Cos');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Div', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Exp');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface BatchNormInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  mean: TensorInfo;\n  variance: TensorInfo;\n  offset: TensorInfo;\n  scale: TensorInfo;\n}\n\ninterface BatchNormAttrs extends NamedAttrMap {\n  varianceEpsilon: number;\n}\n\nlet wasmBatchNorm: (\n  xId: number, meanId: number, varianceId: number, offsetId: number,\n  scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n    'FusedBatchNorm', null /* void */,\n    ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(\n  args:\n    {backend: BackendWasm, inputs: BatchNormInputs, attrs: BatchNormAttrs}):\n  TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n    xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'FusedBatchNorm',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\ninterface FusedConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n  bias?: TensorInfo;\n}\n\nlet wasmFusedConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, biasId: number,\n    padTop: number, padRight: number, padBottom: number, padLeft: number,\n    isSamePad: number, dilationHeight: number, dilationWidth: number,\n    strideHeight: number, strideWidth: number, inputChannels: number,\n    outputChannels: number, activation: number,\n    preluActivationWeightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap('FusedConv2D', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // outId\n  ]);\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs:\n      {convInfo: backend_util.Conv2DInfo, activation: backend_util.Activation}\n}) {\n  const {inputs, attrs, backend} = args;\n  const {convInfo, activation} = attrs;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'FusedConv2D',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {FusableActivation} from './types';\n\ninterface FusedDepthwiseConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n  bias?: TensorInfo;\n}\n\nlet wasmFusedDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, biasId: number,\n    padTop: number, padRight: number, padBottom: number, padLeft: number,\n    isSamePad: number, dilationHeight: number, dilationWidth: number,\n    strideHeight: number, strideWidth: number, inputChannels: number,\n    outputChannels: number, activation: number,\n    preluActivationWeightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap('FusedDepthwiseConv2D', null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // outId\n      ]);\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs:\n      {convInfo: backend_util.Conv2DInfo, activation: backend_util.Activation}\n}) {\n  const {inputs, attrs, backend} = args;\n  const {convInfo, activation} = attrs;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'FusedDepthwiseConv2D',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface GatherInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  indices: TensorInfo;\n}\n\ninterface GatherAttrs extends NamedAttrMap {\n  axis: number;\n}\n\nlet wasmGather:\n    (xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\n     indicesId: number, axis: number, outStrides: Uint8Array, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'array',   // xStrides\n    'number',  // stridesSize\n    'number',  // indicesId\n    'number',  // axis\n    'array',   // outStrides\n    'number'   // outId\n  ]);\n}\n\nfunction gather(\n    args: {backend: BackendWasm, inputs: GatherInputs, attrs: GatherAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis} = attrs;\n\n  const newShape = x.shape.slice();\n  newShape[axis] = util.sizeFromShape(indices.shape);\n  const stridesSize = x.shape.length - 1;\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const xStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n  const outStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(newShape)).buffer);\n\n  wasmGather(\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId, axis,\n      outStridesBytes, outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Gather',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gather\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {gather_util, NamedTensorInfoMap, registerKernel, Tensor, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface GatherNdInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  indices: TensorInfo;\n}\n\nlet wasmGatherNd: (\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGatherNd = backend.wasm.cwrap('GatherNd', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'number',  // indicesId\n    'number',  // numSlices\n    'number',  // sliceRank\n    'number',  // sliceSize\n    'array',   // strides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\n    TensorInfo {\n  const {backend, inputs} = args;\n  const {x, indices} = inputs;\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      gather_util.prepareAndValidate(x as Tensor, indices as Tensor);\n\n  const out = backend.makeOutput(resultShape, x.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(\n      xId, CppDType[x.dtype], indicesId, numSlices, sliceRank, sliceSize,\n      stridesBytes, outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'GatherNd',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('FloorDiv', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Greater', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('GreaterEqual', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Less', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('LessEqual', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Log');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {Max, MaxAttrs, MaxInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMax: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax =\n      backend.wasm.cwrap('Max', null /*void*/, ['number, number, number']);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: {}, attrs: {}}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {reductionIndices} = attrs as MaxAttrs;\n  const {x} = inputs as MaxInputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const origAxes = util.parseAxisParam(reductionIndices, x.shape);\n\n  backend_util.assertAxesAreInnerMostDims('max', origAxes, x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(x.shape, origAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMax(xId, reduceSize, outId);\n\n  return out;\n}\n\nregisterKernel(\n    {kernelName: Max, backendName: 'wasm', setupFunc: setup, kernelFunc: max});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('LogicalAnd', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface MaxPoolInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap('MaxPool', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(args: {\n  inputs: MaxPoolInputs,\n  backend: BackendWasm,\n  attrs: backend_util.Conv2DInfo\n}) {\n  const {inputs, attrs, backend} = args;\n  const convInfo = attrs;\n\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'MaxPool',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface MinInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface MinAttrs extends NamedAttrMap {\n  axes: number[];\n}\n\nlet wasmMin: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin =\n      backend.wasm.cwrap('Min', null /*void*/, ['number, number, number']);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axes} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMin(xId, reduceSize, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Min',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Maximum', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Minimum', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 3);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores};\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\ninterface NonMaxSuppressionInputs extends NamedTensorInfoMap {\n  boxes: TensorInfo;\n  scores: TensorInfo;\n}\n\ninterface NonMaxSuppressionAttrs extends NamedAttrMap {\n  maxOutputSize: number;\n  iouThreshold: number;\n  scoreThreshold: number;\n}\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      'NonMaxSuppressionV3',\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionInputs,\n  attrs: NonMaxSuppressionAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  return selectedIndicesTensor;\n}\n\nregisterKernel({\n  kernelName: 'NonMaxSuppressionV3',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\ninterface NonMaxSuppressionInputs extends NamedTensorInfoMap {\n  boxes: TensorInfo;\n  scores: TensorInfo;\n}\n\ninterface NonMaxSuppressionAttrs extends NamedAttrMap {\n  maxOutputSize: number;\n  iouThreshold: number;\n  scoreThreshold: number;\n  softNmsSigma: number;\n}\n\nlet wasmFunc:\n    (boxesId: number, scoresId: number, maxOutputSize: number,\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\n        number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      'NonMaxSuppressionV5',\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'number',  // softNmsSigma\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionInputs,\n  attrs: NonMaxSuppressionAttrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  const {\n    pSelectedIndices,\n    selectedSize,\n    pSelectedScores,\n  } = parseResultStruct(backend, resOffset);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor =\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nregisterKernel({\n  kernelName: 'NonMaxSuppressionV5',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Mul', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Neg');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface PadInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface PadAttrs extends NamedAttrMap {\n  paddings: Array<[number, number]>;\n  constantValue: number;\n}\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    paddingsBytes: Uint8Array, constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap('PadV2', null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(args: {inputs: PadInputs, backend: BackendWasm, attrs: PadAttrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const paddingsFlat = [].concat(...paddings);\n  const paddingsBytes = new Uint8Array(new Int32Array(paddingsFlat).buffer);\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], paddingsBytes,\n      constantValue, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'PadV2',\n  backendName: 'wasm',\n  kernelFunc: pad,\n  setupFunc: setup\n});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('NotEqual', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface OnesLikeInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\nfunction onesLike(args: {inputs: OnesLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(1);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'OnesLike',\n  backendName: 'wasm',\n  kernelFunc: onesLike as {} as KernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface PreluInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  alpha: TensorInfo;\n}\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap('Prelu', null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(xId, weightsId, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Prelu',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\ninterface ResizeBilinearInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface ResizeBilinearAttrs extends NamedAttrMap {\n  newWidth: number;\n  newHeight: number;\n  alignCorners: boolean;\n}\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap('ResizeBilinear', null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n  const {alignCorners, newHeight, newWidth} = attrs;\n\n  const [batch, oldHeight, oldWidth, numChannels] = x.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(x.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ResizeBilinear',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, scatter_util, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface ScatterNdInputs extends NamedTensorInfoMap {\n  indices: TensorInfo;\n  updates: TensorInfo;\n}\n\ninterface ScatterNdAttrs extends NamedAttrMap {\n  shape: number[];\n}\n\nlet wasmScatterNd: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmScatterNd = backend.wasm.cwrap('ScatterNd', null /*void*/, [\n    'number',  // indicesId\n    'number',  // updatesId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number'   // outId\n  ]);\n}\n\nfunction scatterNd(\n    args:\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ScatterNd',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface SigmoidInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\nlet wasmFunc: (xId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc =\n      backend.wasm.cwrap('Sigmoid', null /* void */, ['number', 'number']);\n}\n\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\n    TensorInfo {\n  const {backend, inputs: {x}} = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid\n});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface SoftmaxInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface SoftmaxAttrs extends NamedAttrMap {\n  dim: number;\n}\n\nlet wasmFunc: (xId: number, outId: number, channels: number, batch: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap('Softmax', null /* void */, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number'   // batch\n  ]);\n}\n\nfunction softmax(\n    args: {backend: BackendWasm, inputs: SoftmaxInputs, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {backend, inputs: {logits}, attrs: {dim}} = args;\n  const xId = backend.dataIdMap.get(logits.dataId).id;\n  const out = backend.makeOutput(logits.shape, logits.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const channels = logits.shape[dim];\n  const batch = util.sizeFromShape(logits.shape) / channels;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId, channels, batch);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Softmax',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: softmax\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, buffer, NamedAttrMap, NamedTensorInfoMap, registerKernel, slice_util, util} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface SliceInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface SliceAttrs extends NamedAttrMap {\n  begin: number[];\n  size: number[];\n}\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n  const isContinous = slice_util.isSliceContinous(x.shape, begin, size);\n  const xVals = backend.typedArrayFromHeap(x);\n  const out = backend.makeOutput(size, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  const xStrides = util.computeStrides(x.shape);\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n    outVals.set(\n        xVals.subarray(flatOffset, flatOffset + util.sizeFromShape(size)));\n    return out;\n  }\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals, xStrides[0], outVals, begin as [number, number],\n        size as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals, xStrides[0], xStrides[1], outVals,\n        begin as [number, number, number], size as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin as [number, number, number, number],\n        size as [number, number, number, number]);\n  } else {\n    genericSliceSlow(xVals, x, outVals, begin, size);\n  }\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nfunction genericSliceSlow(\n    xVals: backend_util.TypedArray, xInfo: TensorInfo,\n    outVals: backend_util.TypedArray, begin: number[], size: number[]): void {\n  const outBuf = buffer(size, xInfo.dtype, outVals);\n  const xBuf = buffer(xInfo.shape, xInfo.dtype, xVals);\n  for (let i = 0; i < outBuf.size; ++i) {\n    const loc = outBuf.indexToLoc(i);\n    const xLoc = loc.map((idx, j) => idx + begin[j]);\n    outVals[i] = xBuf.get(...xLoc) as number;\n  }\n}\n\nregisterKernel({\n  kernelName: 'Slice',\n  backendName: 'wasm',\n  kernelFunc: slice,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Pow', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Relu');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Relu6');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface ReshapeInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface ReshapeAttrs extends NamedAttrMap {\n  shape: number[];\n}\n\nexport function reshape(\n    args: {inputs: ReshapeInputs, attrs: ReshapeAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {shape}} = args;\n  return {dataId: x.dataId, shape, dtype: x.dtype};\n}\n\nregisterKernel({\n  kernelName: 'Reshape',\n  backendName: 'wasm',\n  kernelFunc: reshape,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Rsqrt');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Sin');\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, SplitV, SplitVAttrs, SplitVInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nexport function split(args: {\n  inputs: NamedTensorInfoMap,\n  attrs: NamedAttrMap,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x} = inputs as {} as SplitVInputs;\n  const {numOrSizeSplits, axis} = attrs as {} as SplitVAttrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n\n  let splitSizes: number[];\n  if (typeof (numOrSizeSplits) === 'number') {\n    splitSizes =\n        new Array(numOrSizeSplits).fill(x.shape[$axis] / numOrSizeSplits);\n  } else {\n    splitSizes = numOrSizeSplits;\n  }\n\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice =\n        slice({inputs: {x}, attrs: {begin, size: xSliceSize}, backend});\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\n\nregisterKernel({kernelName: SplitV, backendName: 'wasm', kernelFunc: split});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Sqrt');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Square');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface SumInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface SumAttrs extends NamedAttrMap {\n  axes: number[];\n}\n\nlet wasmSum: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum =\n      backend.wasm.cwrap('Sum', null /*void*/, ['number, number, number']);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axes} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  backend_util.assertAxesAreInnerMostDims('sum', axes, x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmSum(xId, reduceSize, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Sum',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface TileInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface TileAttrs extends NamedAttrMap {\n  reps: number[];\n}\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap('Tile', null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Tile',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface TransposeInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface TransposeAttrs extends NamedAttrMap {\n  perm: number[];\n}\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap('Transpose', null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nfunction transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  if (permIsNoOp) {\n    return {dataId: x.dataId, shape: outShape, dtype: x.dtype};\n  }\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nregisterKernel({\n  kernelName: 'Transpose',\n  backendName: 'wasm',\n  kernelFunc: transpose,\n  setupFunc: setup,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Sub', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Tanh');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {slice} from './Slice';\n\ninterface UnpackInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface UnpackAttrs extends NamedAttrMap {\n  axis: number;\n}\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs: {x}, backend, attrs: {axis}} = args;\n  const numOutputs = x.shape[axis];\n  const rank = x.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = x.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = x.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nregisterKernel({\n  kernelName: 'Unpack',\n  backendName: 'wasm',\n  kernelFunc: unpack,\n});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface ZerosLikeInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\nfunction zerosLike(args: {inputs: ZerosLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(0);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ZerosLike',\n  backendName: 'wasm',\n  kernelFunc: zerosLike as {} as KernelFunc,\n});\n","\nvar WasmBackendModule = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!==\"undefined\"?WasmBackendModule:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_HAS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_HAS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_NODE=ENVIRONMENT_HAS_NODE&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;read_=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\")}var wasmMemory;var wasmTable=new WebAssembly.Table({\"initial\":112,\"maximum\":112+0,\"element\":\"anyfunc\"});var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var DYNAMIC_BASE=5253200,DYNAMICTOP_PTR=10160;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_ceil=Math.ceil;var Math_floor=Math.floor;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";throw new WebAssembly.RuntimeError(what)}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_unstable\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}__ATINIT__.push({func:function(){___wasm_call_ctors()}});function _abort(){abort()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function _emscripten_get_heap_size(){return HEAP8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=65536;var LIMIT=2147483648-PAGE_MULTIPLE;if(requestedSize>LIMIT){return false}var MIN_TOTAL_MEMORY=16777216;var newSize=Math.max(oldSize,MIN_TOTAL_MEMORY);while(newSize<requestedSize){if(newSize<=536870912){newSize=alignUp(2*newSize,PAGE_MULTIPLE)}else{newSize=Math.min(alignUp((3*newSize+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=emscripten_realloc_buffer(newSize);if(!replacement){return false}return true}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};var SYSCALLS={buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();return low},getZero:function(){SYSCALLS.get()}};function _fd_close(fd){try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){try{var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _roundf(d){d=+d;return d>=+0?+Math_floor(d+ +.5):+Math_ceil(d-+.5)}var asmLibraryArg={\"a\":_abort,\"d\":_emscripten_memcpy_big,\"e\":_emscripten_resize_heap,\"g\":_fd_close,\"c\":_fd_seek,\"f\":_fd_write,\"memory\":wasmMemory,\"b\":_roundf,\"table\":wasmTable};var asm=createWasm();Module[\"asm\"]=asm;var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return Module[\"asm\"][\"h\"].apply(null,arguments)};var _init=Module[\"_init\"]=function(){return Module[\"asm\"][\"i\"].apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return Module[\"asm\"][\"j\"].apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return Module[\"asm\"][\"k\"].apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return Module[\"asm\"][\"l\"].apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return Module[\"asm\"][\"m\"].apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return Module[\"asm\"][\"n\"].apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return Module[\"asm\"][\"o\"].apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return Module[\"asm\"][\"p\"].apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return Module[\"asm\"][\"q\"].apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return Module[\"asm\"][\"r\"].apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return Module[\"asm\"][\"s\"].apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return Module[\"asm\"][\"t\"].apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return Module[\"asm\"][\"u\"].apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return Module[\"asm\"][\"v\"].apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return Module[\"asm\"][\"w\"].apply(null,arguments)};var _Div=Module[\"_Div\"]=function(){return Module[\"asm\"][\"x\"].apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return Module[\"asm\"][\"y\"].apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return Module[\"asm\"][\"z\"].apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return Module[\"asm\"][\"A\"].apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return Module[\"asm\"][\"B\"].apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return Module[\"asm\"][\"C\"].apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return Module[\"asm\"][\"D\"].apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return Module[\"asm\"][\"E\"].apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return Module[\"asm\"][\"F\"].apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return Module[\"asm\"][\"G\"].apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return Module[\"asm\"][\"H\"].apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return Module[\"asm\"][\"I\"].apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return Module[\"asm\"][\"J\"].apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return Module[\"asm\"][\"K\"].apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return Module[\"asm\"][\"L\"].apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return Module[\"asm\"][\"M\"].apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return Module[\"asm\"][\"N\"].apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return Module[\"asm\"][\"O\"].apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return Module[\"asm\"][\"P\"].apply(null,arguments)};var _Mul=Module[\"_Mul\"]=function(){return Module[\"asm\"][\"Q\"].apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return Module[\"asm\"][\"R\"].apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return Module[\"asm\"][\"S\"].apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return Module[\"asm\"][\"T\"].apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return Module[\"asm\"][\"U\"].apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return Module[\"asm\"][\"V\"].apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return Module[\"asm\"][\"W\"].apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return Module[\"asm\"][\"X\"].apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return Module[\"asm\"][\"Y\"].apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return Module[\"asm\"][\"Z\"].apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return Module[\"asm\"][\"_\"].apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return Module[\"asm\"][\"$\"].apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return Module[\"asm\"][\"aa\"].apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return Module[\"asm\"][\"ba\"].apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return Module[\"asm\"][\"ca\"].apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return Module[\"asm\"][\"da\"].apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return Module[\"asm\"][\"ea\"].apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return Module[\"asm\"][\"fa\"].apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return Module[\"asm\"][\"ga\"].apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return Module[\"asm\"][\"ha\"].apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return Module[\"asm\"][\"ia\"].apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return Module[\"asm\"][\"ja\"].apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return Module[\"asm\"][\"ka\"].apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return Module[\"asm\"][\"la\"].apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return Module[\"asm\"][\"ma\"].apply(null,arguments)};var _free=Module[\"_free\"]=function(){return Module[\"asm\"][\"na\"].apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return Module[\"asm\"][\"oa\"].apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return Module[\"asm\"][\"pa\"].apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return Module[\"asm\"][\"qa\"].apply(null,arguments)};var dynCall_vi=Module[\"dynCall_vi\"]=function(){return Module[\"asm\"][\"ra\"].apply(null,arguments)};var dynCall_v=Module[\"dynCall_v\"]=function(){return Module[\"asm\"][\"sa\"].apply(null,arguments)};Module[\"asm\"]=asm;Module[\"cwrap\"]=cwrap;var calledRun;Module[\"then\"]=function(func){if(calledRun){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n  return WasmBackendModule\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = WasmBackendModule;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return WasmBackendModule; });\n    else if (typeof exports === 'object')\n      exports[\"WasmBackendModule\"] = WasmBackendModule;\n    ","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, engine, KernelBackend, registerBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport wasmFactory from '../wasm-out/tfjs-backend-wasm.js';\n\nconst WASM_PRIORITY = 2;\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule) {\n    super();\n    this.wasm.tfjs.init();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  write(values: backend_util.BackendValues, shape: number[], dtype: DataType):\n      DataId {\n    const dataId = {};\n    this.move(dataId, values, shape, dtype);\n    return dataId;\n  }\n\n  numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  move(\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\n      dtype: DataType): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId, {id, stringBytes, shape, dtype, memoryOffset: null});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n    const memoryOffset = this.wasm._malloc(numBytes);\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer, 0, numBytes),\n          memoryOffset);\n    }\n  }\n\n  async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  readSync(dataId: DataId): backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      return stringBytes;\n    }\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset,\n        memoryOffset + util.sizeFromShape(shape) * util.bytesPerElement(dtype));\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  disposeData(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    this.wasm._free(data.memoryOffset);\n    this.wasm.tfjs.disposeData(data.id);\n    this.dataIdMap.delete(dataId);\n  }\n\n  floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  dispose() {\n    this.wasm.tfjs.dispose();\n    this.wasm = null;\n  }\n\n  memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(shape: number[], dtype: DataType, memoryOffset?: number):\n      TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(null /* values */, shape, dtype);\n    } else {\n      dataId = {};\n      const id = this.dataIdNextNumber++;\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Uknown dtype ${dtype}`);\n    }\n  }\n}\n\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n\nfunction createInstantiateWasmFunc(path: string) {\n  // tslint:disable-next-line:no-any\n  return (imports: any, callback: any) => {\n    util.fetch(path, {credentials: 'same-origin'}).then((response) => {\n      if (!response['ok']) {\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\n      }\n      response.arrayBuffer().then(binary => {\n        WebAssembly.instantiate(binary, imports).then(output => {\n          callback(output.instance);\n        });\n      });\n    });\n    return {};\n  };\n}\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n    if (wasmPath != null) {\n      factoryConfig.locateFile = (path, prefix) => {\n        if (path.endsWith('.wasm')) {\n          return wasmPath;\n        }\n        return prefix + path;\n      };\n      // use wasm instantiateWasm override when system fetch is not available.\n      // For detail references\n      // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n      if (customFetch) {\n        factoryConfig.instantiateWasm = createInstantiateWasmFunc(wasmPath);\n      }\n    }\n    const wasm = wasmFactory(factoryConfig);\n    const voidReturnType: string = null;\n    // Using the tfjs namespace to avoid conflict with emscripten's API.\n    wasm.tfjs = {\n      init: wasm.cwrap('init', null, []),\n      registerTensor: wasm.cwrap(\n          'register_tensor', null,\n          [\n            'number',  // id\n            'number',  // size\n            'number',  // memoryOffset\n          ]),\n      disposeData: wasm.cwrap('dispose_data', voidReturnType, ['number']),\n      dispose: wasm.cwrap('dispose', voidReturnType, []),\n    };\n    let initialized = false;\n    wasm.onRuntimeInitialized = () => {\n      initialized = true;\n      initAborted = false;\n      resolve({wasm});\n    };\n    wasm.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error\n        // messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nlet wasmPath: string = null;\nlet initAborted = false;\nlet customFetch = false;\n/**\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n */\n/** @doc {heading: 'Environment', namespace: 'wasm'} */\nexport function setWasmPath(path: string, usePlatformFetch = false): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n  customFetch = usePlatformFetch;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n  customFetch = false;\n  initAborted = false;\n}\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '2.0.0';\nexport {version};\n"],"names":["CppDType","FusableActivation","wasmFusedMatMul","registerUnaryKernel","kernelName","wasmFunc","registerKernel","backendName","setupFunc","backend","wasm","cwrap","kernelFunc","args","inputs","x","xId","dataIdMap","get","dataId","id","out","makeOutput","shape","dtype","outId","util","sizeFromShape","registerBinaryKernel","supportsFullBroadcast","a","b","aId","bId","outputType","newShape","backend_util","assertAndGetBroadcastShape","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","length","aBroadcastDims","getBroadcastDims","bBroadcastDims","loopsOverAllOfA","every","v","i","loopsOverAllOfB","Error","attrs","bias","preluActivationWeights","transposeA","transposeB","activation","biasId","biasData","preluActivationWeightsId","fusedActivation","leftDim","rightDim","batchDim","wasmAvgPool","wasmBatchMatMul","wasmClip","wasmConv2d","cast","inVals","typedArrayFromHeap","set","InterpolationMethod","wasmCropAndResize","wasmDepthwiseConv2d","inputIds","map","inputIdsBytes","axis","outShape","slice","outerSize","innerSize","convInfo","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","dilationWidth","dilationHeight","min","max","computeOutShape","t","sumInnerDims","innerDims","input","innerDim","outVals","outOffset","inOffset","vals","subarray","filter","filterId","strides","dilations","pad","dimRoundingMode","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","inputChannels","outputChannels","outChannels","isSamePad","type","method","extrapolationValue","cropSize","images","boxes","boxInd","numBoxes","cropHeight","cropWidth","castedData","imagesData","imagesId","boxesId","boxIndId","imagesShapeBytes","disposeData","$dilations","wasmBatchNorm","wasmFusedConv2d","wasmFusedDepthwiseConv2d","wasmGather","wasmGatherNd","varianceEpsilon","mean","variance","offset","scale","meanId","varianceId","offsetId","scaleId","batchSize","inHeight","inWidth","indices","stridesSize","indicesId","xStridesBytes","computeStrides","outStridesBytes","resultShape","numSlices","sliceSize","gather_util","prepareAndValidate","indicesShape","sliceRank","stridesBytes","wasmMax","Max","reductionIndices","origAxes","parseAxisParam","assertAxesAreInnerMostDims","reduceShape","computeOutAndReduceShapes","reduceSize","wasmMaxPool","wasmMin","axes","parseResultStruct","resOffset","result","HEAPU8","pSelectedIndices","selectedSize","pSelectedScores","_free","iouThreshold","maxOutputSize","scoreThreshold","scores","scoresId","softNmsSigma","wasmPadV2","fill","paddings","constantValue","p","xShapeBytes","paddingsFlat","concat","paddingsBytes","wasmPrelu","wasmResizeBilinear","wasmScatterNd","begin","size","isContinous","slice_util","isSliceContinous","xVals","xStrides","flatOffset","computeFlatOffset","rank","xStride","beginI","beginJ","endI","xOffset","slice2d","xStride1","xStride2","beginK","endJ","j","slice3d","xStride3","endK","beginL","k","slice4d","xInfo","outBuf","xBuf","xLoc","indexToLoc","idx","genericSliceSlow","alpha","weightsId","alignCorners","newHeight","newWidth","batch","oldHeight","oldWidth","numChannels","xData","updates","numUpdates","outputSize","scatter_util","calculateShapes","updatesId","logits","dim","SplitV","numOrSizeSplits","$axis","splitSizes","Array","s","xSliceSize","xSlice","wasmSum","wasmTile","wasmTranspose","reps","newShapeBytes","reducedShape","perm","newPerm","push","minValIdx","removeOneSizeDims","permIsNoOp","inShape","permBytes","numOutputs","outIndex","outs","_scriptDir","WasmBackendModule","document","currentScript","src","undefined","key","Module","moduleOverrides","hasOwnProperty","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","read_","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","__dirname","filename","binary","ret","require$$0","require$$1","toString","assert","replace","ex","ExitStatus","abort","read","f","data","readbuffer","scriptArgs","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","wasmBinary","wasmMemory","bind","err","WebAssembly","wasmTable","Table","initial","maximum","element","ABORT","condition","text","getCFunc","ident","func","ccall","returnType","argTypes","opts","toC","string","str","len","stringToUTF8","stackAlloc","array","arr","writeArrayToMemory","cArgs","stack","converter","stackSave","apply","UTF8ToString","Boolean","convertReturnValue","stackRestore","numericArgs","arguments","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","maxBytesToRead","endIdx","endPtr","decode","u0","u1","u2","String","fromCharCode","ch","ptr","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","outPtr","HEAP8","HEAP32","WASM_PAGE_SIZE","alignUp","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","Float64Array","DYNAMIC_BASE","DYNAMICTOP_PTR","INITIAL_TOTAL_MEMORY","callRuntimeCallbacks","callbacks","callback","shift","arg","Memory","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","Math_ceil","Math","ceil","Math_floor","floor","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","removeRunDependency","clearInterval","what","RuntimeError","dataURIPrefix","isDataURI","prototype","startsWith","wasmBinaryFile","getBinary","getBinaryPromise","fetch","Promise","resolve","reject","credentials","then","catch","createWasm","info","env","asmLibraryArg","wasi_unstable","receiveInstance","instance","module","exports","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","e","instantiateStreaming","instantiateAsync","_abort","_emscripten_memcpy_big","dest","num","_emscripten_get_heap_size","emscripten_realloc_buffer","grow","_emscripten_resize_heap","requestedSize","oldSize","newSize","___wasm_call_ctors","SYSCALLS","buffers","printChar","stream","curr","varargs","getStr","get64","low","getZero","_fd_close","fd","FS","ErrnoError","errno","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","_roundf","d","g","c","memory","table","asm","calledRun","status","this","name","message","run","doRun","setTimeout","old","runCaller","pop","BackendWasm","KernelBackend","[object Object]","super","tfjs","init","DataStorage","engine","values","move","numDataIds","start","now","kernelMs","dataIdNextNumber","stringBytes","memoryOffset","numBytes","bytesPerElement","_malloc","registerTensor","readSync","typedArrayFromBuffer","delete","dispose","unreliable","write","async","factoryConfig","wasmPath","prefix","endsWith","customFetch","instantiateWasm","imports","arrayBuffer","createInstantiateWasmFunc","wasmFactory","initialized","onRuntimeInitialized","initAborted","onAbort","usePlatformFetch"],"mappings":"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"}